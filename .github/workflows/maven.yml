name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Trigger pipeline on push to the main branch

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      security-events: write
    steps:
   
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Update dependency graph
      run: |
        # Your command to update the dependency graph here
        echo "Updating dependency graph...

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-maven

    - name: Build with Maven
      run: mvn clean package

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
  
      uses: docker/setup-buildx-action@v2

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/my-app .
        docker push ${{ secrets.DOCKER_USERNAME }}/my-app

    - name: Deploy to AWS EC2
      run: |
        ssh -o StrictHostKeyChecking=no ec2-user@${{ secrets.AWS_EC2_IP }} << EOF
          docker pull ${{ secrets.DOCKER_USERNAME }}/my-app
          docker stop my-app || true
          docker rm my-app || true
          docker run -d -p 8080:8080 --name my-app ${{ secrets.DOCKER_USERNAME }}/my-app
        EOF
